<?php

use PhpMx\Dir;
use PhpMx\File;
use PhpMx\Import;
use PhpMx\Terminal;

return new class extends Terminal {

    function __invoke()
    {
        self::createDir('class');
        self::createDir('library');
        self::createDir('system');
        self::createDir('system/helper');
        self::createDir('system/helper/function');
        self::createDir('system/helper/constant');
        self::createDir('system/helper/script');

        self::promote('system/helper/script/path.php');

        self::blockFile('.env', 'MX CORE', [
            'DEV = true'
        ]);

        self::blockFile('.gitignore', 'MX CORE', [
            '/.env',
            '/vendor',
            '/library/cache',
            '/library/certificate',
        ]);

        self::createFile('.conf', [
            '# PUBLIC ENVIRONMENT VARIABLES'
        ]);

        self::createFile('mx', [
            '<?php',
            '',
            'chdir(__DIR__);',
            '',
            'require_once "./vendor/autoload.php";',
            '',
            'echo "---< MX-CMD >---\n\n";',
            '',
            '$terminalArgs = $argv;',
            'array_shift($terminalArgs);',
            '\PhpMx\Terminal::run(...$terminalArgs);',
            '',
            'echo "\n---< MX-CMD >---\n";',
            '',
            'die;',
        ]);
    }

    /** Promove um arquivo para o projeto atual */
    protected function promote(string $pathFile)
    {
        if (!File::check($pathFile)) {
            self::run("promote $pathFile");
            self::echo("promote: $pathFile [promoted]");
        } else {
            self::echo("promote: $pathFile [ignored]");
        }
    }

    /** Cria um novo diretório no projeto atual */
    protected function createDir(string $pathDir)
    {
        if (!Dir::check($pathDir)) {
            Dir::create("$pathDir");
            self::echo("create dir: $pathDir [created]");
        } else {
            self::echo("create dir: $pathDir [ignored]");
        }
    }

    /** Cria um novo arquivo no projeto atual */
    protected function createFile(string $pathFile, array $contentLines)
    {
        if (!File::check($pathFile)) {
            File::create($pathFile, implode("\n", $contentLines));
            self::echo("create file: $pathFile [created]");
        } else {
            self::echo("create file: $pathFile [ignored]");
        }
    }

    /** Adiciona um bloco de conteúdo a um arquivo */
    protected function blockFile(string $pathFile, string $blockName, array $contentLines)
    {
        $fileContent = Import::content($pathFile) ?? '';

        if (!str_contains($fileContent, "# $blockName")) {
            $fileContent = empty($fileContent) ? "# $blockName\n\n" : "$fileContent\n# $blockName\n\n";
            $fileContent .=  implode("\n", $contentLines);
            $fileContent .=  "\n";
            File::create($pathFile, $fileContent, true);
            self::echo("block file: $blockName ($pathFile) [added]");
        } else {
            self::echo("block file: $blockName ($pathFile) [ignored]");
        }
    }
};
